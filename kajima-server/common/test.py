from jsonutils import json2str
import numpy as np
# A shorter numpy ndarray with 5 elements
features_array = np.array([-0.892, 0.622, 0.937, -0.023, 0.061], dtype=np.float32)
import mysql.connector
from json import JSONEncoder
import json
import io

class NumpyArrayEncoder(JSONEncoder):
    def default(self, obj):
        if isinstance(obj, np.ndarray):
            return obj.tolist()
        return JSONEncoder.default(self, obj)

def loading_bytes(query) :
    current_byte = io.BytesIO(query)
    loaded_numpy = np.load(current_byte,allow_pickle = True)

    return loaded_numpy

# connection = mysql.connector.connect(
#     # host = "localhost",
#     host = "127.0.0.1",
#     user = "root",
#     password = "ew@icSG23",
#     database = "kajima_db",
#     port = "3306"
# )
# mycursor = connection.cursor()
# Creating the JSON object
data ={
    "features": [-1.4732940196990967, -0.3157386779785156, -0.9091883897781372, 0.6711665987968445, 0.04477153718471527, 1.090132474899292, 0.56476891040802, 0.7100042104721069, -0.5759050846099854, 0.2295096218585968, 1.3404182195663452, -0.7060248255729675, -0.12028668075799942, -0.9461144804954529, -0.6976541876792908, -0.12138629704713821, 0.33992719650268555, 0.0525260753929615, -0.2520352303981781, 0.14557088911533356, 0.9947112202644348, 1.5401395559310913, -0.6000407934188843, -1.4898598194122314, -0.15513180196285248, 0.6635163426399231, 0.6894961595535278, 0.341272234916687, 0.5724721550941467, -0.5905821919441223, 0.21124029159545898, 0.6352733373641968, -0.6201501488685608, -0.6501637697219849, -0.3673284351825714, 0.5166837573051453, -0.22307449579238892, 0.7891601324081421, 0.06269055604934692, 0.32630372047424316, -1.2088590860366821, 0.2538401782512665, 1.1004997491836548, -0.1278362274169922, 0.059879619628190994, 0.11999845504760742, 0.35274356603622437, -0.06670042872428894, -1.470955491065979, -0.9624179005622864, 0.26800164580345154, -0.936026394367218, -0.006171619985252619, -0.06432346254587173, -0.7119783163070679, 0.507345974445343, -0.5262063145637512, 0.85601806640625, 0.24950474500656128, -0.7014415860176086, 1.08171808719635, 0.20231162011623383, 0.5578227639198303, -1.4786887168884277, -1.0068280696868896, 0.7920054793357849, -0.33609098196029663, 0.5914490818977356, 1.0308003425598145, -0.057231780141592026, -0.3653047978878021, -0.5429127216339111, 1.185924768447876, 0.2310066521167755, -0.08067844063043594, -0.29127198457717896, -0.06828058511018753, -0.9282018542289734, 0.11820369213819504, 0.5845828056335449, 0.02780713140964508, -0.9943757057189941, -0.8718895316123962, 0.01731332764029503, 0.49721643328666687, 0.8915446996688843, -0.10849156230688095, -0.9607598781585693, -0.8166124820709229, 1.1880403757095337, -0.5104529857635498, -0.8433688879013062, -0.39665621519088745, 0.3283654749393463, -0.359304815530777, -0.1467079371213913, -0.36573442816734314, -0.14143486320972443, 0.7046594023704529, 0.7508540153503418, -1.5988287925720215, -0.3479098677635193, -0.8445166945457458, -0.3268032371997833, 0.5764593482017517, 0.3540412485599518, 0.032722219824790955, -0.41035524010658264, 0.3964771330356598, -0.21912649273872375, -0.07585892081260681, -0.6967071890830994, 0.08001799881458282, 0.6002458333969116, -1.13674795627594, 0.15052451193332672, -1.1642520427703857, 0.5371943116188049, 1.108079433441162, 1.978312611579895, -0.07580423355102539, -1.368504285812378, 0.32526350021362305, 0.5494443774223328, -0.9673147797584534, -0.252509206533432, -0.10453350841999054, -1.2804148197174072, 0.3901049792766571, 0.5192170739173889, -1.068196177482605, 1.2248276472091675, -0.7628750205039978, -1.0474625825881958, -1.2097318172454834, -0.8988600373268127, -0.41155457496643066, -1.126725196838379, 1.106228232383728, -1.203352689743042, 0.5758272409439087, -0.12579944729804993, 0.04518181085586548, 0.2963857054710388, -1.2306283712387085, -0.18201637268066406, 1.1945675611495972, 0.9690344929695129, -1.0915052890777588, 0.581537127494812, 0.5910453796386719, 0.8600850701332092, 0.930523157119751, -0.6885350346565247, -0.635672390460968, -0.8721045851707458, 0.8723280429840088, 0.2027818262577057, -0.3975186347961426, -1.3100281953811646, 0.15708786249160767, 0.005680606700479984, -0.2872016131877899, 0.9472548961639404, -0.3105846345424652, -0.5844164490699768, -0.5782689452171326, 0.9240741729736328, 0.5666857361793518, 0.49321192502975464, 0.27561184763908386, 0.5602195262908936, -0.9708402752876282, 1.0242724418640137, 0.6002562046051025, 0.6263498067855835, 0.3145858347415924, -0.2333301305770874, 2.195034980773926, -0.23913566768169403, -1.844686508178711, 0.9230884313583374, -1.0065288543701172, -0.5789285898208618, -0.4868217408657074, -0.11108054220676422, 0.041896454989910126, -0.7996841669082642, -0.6093035936355591, 0.26559898257255554, -0.44992339611053467, 0.832612931728363, -0.9716122150421143, 0.48074907064437866, -0.07358871400356293, 0.2844274342060089, 0.3204515278339386, -0.7072898745536804, -0.07167086005210876, 1.105737328529358, 0.45348209142684937, -0.2031216025352478, 0.19464710354804993, -0.6341111063957214, -0.8261702656745911, 0.7161173820495605, -0.33106401562690735, 0.9885814189910889, -0.6514841914176941, -1.7248377799987793, -0.24644030630588531, -0.05646154657006264, 1.1231560707092285, -0.1681584268808365, 0.8571943044662476, -0.47085830569267273, -0.8079668879508972, 0.3533439338207245, 0.126863032579422, -1.0041756629943848, 0.4524659514427185, -0.19216154515743256, -0.6113879084587097, -0.9995257258415222, -0.6786091327667236, 0.4931851029396057, 0.33554840087890625, -1.2615646123886108, -0.2410070151090622, 0.10727465152740479, -0.9190847873687744, -0.6812288165092468, 0.5647329092025757, -0.023403126746416092, 1.3440890312194824, -0.729748010635376, -0.6610945463180542, -0.5347426533699036, 1.009553074836731, -0.9922720193862915, 0.09295812994241714, 1.475002408027649, -0.2467530518770218, -0.035022083669900894, 0.8983047604560852, -0.40455010533332825, 0.745535671710968, -0.6756483912467957, 0.3354453444480896, -0.23881572484970093, -0.7300277352333069, 1.1989997625350952, 0.48038530349731445, -0.4962252378463745, 2.0253512859344482, 0.006741424556821585],
    "name": "2", 
    "person_details": {"gender": 0, "race": 0, "age": 0}
    }
# np_array = np.array(data['features'])

# data = {
#     'human_id' : data['name'],
#     'body_features' : np_array.tobytes(),
# }

# print(data)

# print("##############")
# List = {
#     'fvList':[]
# }
# import redis

# _query = "SELECT * FROM body_table"
# _details = []
# cur = mycursor.execute(_query)
# cur = mycursor.fetchall()

# for c in cur:
#     _details.append({
#         'features': loading_bytes(c[2]),
#         'human_id': c[1],
#     })
# print(_details[0])
# Connect to the Redis server with the password
import redis
redis_client = redis.Redis(host='10.13.3.57', port=6379, password='ew@icSG23')

# Publish the message "hello" to the channel "person.body.notify"
channel = 'person.body.notify'
message = json2str(data)
redis_client.publish(channel, message)

# List['fvList'].append(data)
# message = json2str(List)
# redis_client.publish(channel, message)
